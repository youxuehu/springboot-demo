version: '2'
services:
  jobmanager:
    image: khkw/flink:1.11.1
    volumes:
      - ~/flinkDeploy:/opt/flinkDeploy
    hostname: "jobmanager"
    restart: always
    expose:
      - "6123"
    ports:
      - "4000:4000"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
  taskmanager:
    image: khkw/flink:1.11.1
    volumes:
      - ~/flinkDeploy:/opt/flinkDeploy
    restart: always
    expose:
      - "6121"
      - "6122"
    depends_on:
      - jobmanager
    command: taskmanager
    links:
      - jobmanager:jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
  zookeeper:
    container_name: zookeeper
    restart: always
    image: zookeeper:3.6.1
    ports:
      - "2181:2181"
  kafka:
    container_name: kafka
    image: wurstmeister/kafka:2.12-2.5.0
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      HOSTNAME_COMMAND: "route -n | awk '/UG[ \t]/{print $$2}'"
      KAFKA_CREATE_TOPICS: "payment_msg:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
  elasticsearch:
    container_name: elasticsearch
    restart: always
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - TZ='Asia/Shanghai'
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./dockercompose/es/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./dockercompose/es/data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
  kibana:
    container_name: kibana
    restart: always
    image: docker.elastic.co/kibana/kibana:7.8.0
    ports:
      - "5601:5601"
  elasticsearch-head:
    restart: always
    image: wallbase/elasticsearch-head:6-alpine
    container_name: elasticsearch-head
    environment:
      TZ: 'Asia/Shanghai'
    ports:
      - '9100:9100'
  redis:
    image: redis
    restart: always
    container_name: docker_redis
    volumes:
      - ./dockercompose/redis/data:/data
      - ./dockercompose/redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
      - ./dockercompose/redis/logs:/logs
    command:
      redis-server /usr/local/etc/redis/redis.conf
    ports:
      - 6379:6379
  mysql:
    restart: always
    image: mysql:latest
    container_name: youxuehu-mysql
    volumes:
      - ./dockercompose/mysql/data/db:/var/lib/mysql/
      - ./dockercompose/mysql/mysql-3346.sock:/var/run/mysql.sock
      - ./dockercompose/mysql/data/conf:/etc/mysql/conf.d
      - ./dockercompose/mysql/data/init:/docker-entrypoint-initdb.d/
      - ./dockercompose/mysql/data/sql:/opt/sql
    ports:
      - 3306:3306
    command:
      --default-authentication-plugin=mysql_native_password
      --lower_case_table_names=1
    environment:
      MYSQL_ROOT_PASSWORD: zhf123..
      TZ: Asia/Shanghai
  springboot-demo:
    restart: always
    image: docker-spring:1.2
    container_name: springboot-demo
    ports:
      - 8888:8080
    depends_on:
      - mysql
  nginx:
    container_name: some-nginx
    image: nginx:1.13
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./dockercompose/nginx/conf.d:/etc/nginx/conf.d
      - ./dockercompose/nginx/logs:/var/log/nginx
    depends_on:
      - springboot-demo
